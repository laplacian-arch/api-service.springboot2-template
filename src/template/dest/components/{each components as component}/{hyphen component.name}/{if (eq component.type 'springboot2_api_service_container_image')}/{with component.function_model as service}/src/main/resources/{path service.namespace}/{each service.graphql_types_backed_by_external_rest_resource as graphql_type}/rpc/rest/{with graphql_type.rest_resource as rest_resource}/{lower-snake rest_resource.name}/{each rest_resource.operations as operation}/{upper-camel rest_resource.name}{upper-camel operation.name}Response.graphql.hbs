{{define 'response_type_name' (concat
  (upper-camel rest_resource.name) (upper-camel operation.name) 'Response'
) ~}}
"""
The response data structure of the {{operation.name}} API
"""
{{#*inline 'TYPE_DEF'}}
type {{TYPE_NAME}} {
  {{#each MODEL.stored_properties as |property| ~}}
  {{define 'prop_type' (printf (if property.multiple "[%s]!" "%s") (case
    (eq property.type "number") 'Int'
    (upper-camel property.type)
  )) ~}}
  """
  {{shift property.description width=2}}
  """
  {{lower-camel property.name}}: {{prop_type}}{{if (not property.nullable) '!'}}
  {{/each}}
  {{#each MODEL.stored_relationships as |relationship| ~}}
  """
  {{shift relationship.description width=2}}
  """
  {{#if relationship.multiple ~}}
  {{lower-camel relationship.name}}: [{{concat TYPE_NAME (upper-camel relationship.name)}}!]!
  {{else ~}}
  {{lower-camel relationship.name}}: {{concat TYPE_NAME (upper-camel relationship.name)}}{{if (not relationship.nullable) '!'}}
  {{/if}}
  {{/each}}
}
{{#each MODEL.stored_relationships as |relationship| ~}}

"""
{{trim relationship.description}}
"""
{{> TYPE_DEF MODEL=relationship.reference_entity TYPE_NAME=(concat TYPE_NAME (upper-camel relationship.name)) ~}}
{{/each}}
{{/inline}}
{{define 'type_name' (concat
  (upper-camel rest_resource.name) (upper-camel operation.name) 'Response'
) ~}}
{{> TYPE_DEF MODEL=operation.response_model TYPE_NAME=type_name ~}}
