package {{service.namespace}}.controller

import org.springframework.web.bind.annotation.RestController
import org.springframework.web.bind.annotation.RequestMapping
import org.springframework.web.bind.annotation.CrossOrigin
import org.springframework.web.bind.annotation.PostMapping
import org.springframework.web.bind.annotation.RequestBody
import reactor.core.publisher.Mono

import graphql.GraphQL
import graphql.ExecutionInput
import graphql.ExecutionResult
import org.dataloader.DataLoaderRegistry
import org.springframework.transaction.annotation.Transactional

@RestController
@CrossOrigin
@Transactional
class GraphqlController(
    private val graphql: GraphQL,
    private val dataLoaderRegistry: DataLoaderRegistry
) {
    @PostMapping("/graphql")
    fun graphql(@RequestBody params: Mono<GraphqlParams>): Mono<ExecutionResult> {
        return params.map {
            graphql.execute(
                ExecutionInput.newExecutionInput()
                .query(it.query)
                .dataLoaderRegistry(dataLoaderRegistry)
                .build()
            )
        }
    }
}

data class GraphqlParams(
    val query: String,
    val operationName: String? = null,
    val variables: Map<String, Any>? = null
)