{{define 'graphql_types_backed_by_database_table'
  (filter service.graphql_types_backed_by_database_table '@it.entity.top_level')
~}}
scalar Date
scalar Time
scalar DateTime

#
# The root query schema definition.
#
type Query {
  {{#each graphql_types_backed_by_database_table as |type| ~}}
  {{define 'top_level' type.entity}}
  {{lower-camel (plural top_level.name)}}(
    {{#each top_level.stored_properties as |p|}}
    {{lower-camel p.name}}: {{p.class_name}}{{if (eq p.type 'boolean') '' 'SearchInput'}}
    {{/each}}
  ): [{{upper-camel top_level.name}}]!
  numberOf{{upper-camel (plural top_level.name)}}(
    {{#each top_level.stored_properties as |p|}}
    {{lower-camel p.name}}: {{p.class_name}}{{if (eq p.type 'boolean') '' 'SearchInput'}}
    {{/each}}
  ): Int!
  {{define "primary_keys" (filter top_level.properties '@it.primary_key') ~}}
  {{#if primary_keys ~}}
  {{lower-camel top_level.name}}(
    {{#each primary_keys as |pk| ~}}
    {{lower-camel pk.name}}: {{upper-camel pk.class_name}}!
    {{/each}}
  ): {{upper-camel top_level.name}}
  {{/if}}
  {{/each}}
  {{#each service.graphql_types_backed_by_external_rest_api as |type| ~}}
  {{define "operation" type.rest_operation ~}}
  {{lower-camel type.name}}(
    {{#each operation.path_parameters as |param| ~}}
    {{lower-camel param.name}}: {{upper-camel param.type}}!
    {{/each}}
    {{#each operation.query_parameters as |param| ~}}
    {{lower-camel param.name}}: {{upper-camel param.type}}
    {{/each}}
  ): {{upper-camel type.rest_resource.resource_model.name}}
  {{/each}}
  {{#each service.graphql_types_backed_by_indexed_document as |type| ~}}
  {{lower-camel (plural type.name)}}(
    {{define 'entity' type.document_model ~}}
    {{#each entity.stored_properties as |prop| ~}}
    {{define 'param_type' (case
      (eq prop.type 'string') 'String'
      (eq prop.type 'number') 'IntSearchInput'
      (eq prop.type 'boolean') 'BooleanSearchInput'
      (upper-camel prop.type)
    ) ~}}
    {{lower-camel prop.name}}: {{param_type}}
    {{/each}}
  ): [{{upper-camel entity.name}}]!
  {{/each}}
  {{#each service.graphql_types_backed_by_elasticsearch_query as |type| ~}}
  {{define 'query' type.query ~}}
  {{lower-camel query.name}}(
  {{#each query.parameters as |parameter| }}
    {{lower-camel parameter.name}}: {{upper-camel parameter.type}}
  {{/each}}
  ): {{upper-camel query.name}}Data
  {{/each}}
}
