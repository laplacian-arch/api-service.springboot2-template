{{define "package" (concat service.namespace '.rpc.rest.' (lower-snake rest_resource.name) '.' (lower-snake operation.name)) ~}}
package {{package}}
import com.fasterxml.jackson.annotation.JsonProperty
import java.time.*
import java.io.Serializable
{{#*inline 'MODEL_CLASS'}}
class {{CLASS_NAME}}: Serializable {
    companion object {
      private const val serialVersionUID: Long = 1
    }
    {{#each MODEL.stored_properties as |property| ~}}
    {{define 'prop_type' (printf (if property.multiple "List<%s>" "%s") (case
      (eq property.type 'number') 'Int'
      (eq property.type 'date') 'String'
      (eq property.type 'time') 'String'
      (eq property.type 'datetime') 'String'
      (upper-camel property.type)
    )) ~}}
    {{define 'default_value' (case
      property.multiple 'emptyList()'
      property.nullable 'null'
      (eq property.type 'number') '0'
      (eq property.type 'int') '0'
      (eq property.type 'float') '0f'
      (eq property.type 'double') '0'
      (eq property.type 'string') '""'
      (eq property.type 'date') '""'
      (eq property.type 'time') '""'
      (eq property.type 'datetime') '""'
      '""'
    ) ~}}
    @JsonProperty("{{property.name}}")
    var {{lower-camel property.name}}: {{prop_type}}{{if property.nullable '?'}} = {{#if property.default_value}}property.default_value{{else}}{{default_value}}{{/if}}
    {{/each}}

    {{#each MODEL.stored_relationships as |relationship| ~}}
    @JsonProperty("{{relationship.name}}")
    {{#if relationship.multiple ~}}
    var {{lower-camel relationship.name}}: List<{{upper-camel relationship.name}}> = emptyList()
    {{else ~}}
    var {{lower-camel relationship.name}}: {{upper-camel relationship.name}}? = null
    {{/if}}
    /**
     * {{trim relationship.description}}
     */
    {{#shift width=4}}
    {{> MODEL_CLASS MODEL=relationship.reference_entity CLASS_NAME=(upper-camel relationship.name) ~}}
    {{/shift}}
    {{/each}}
}
{{/inline}}
{{> MODEL_CLASS MODEL=operation.response_model CLASS_NAME=(concat (upper-camel operation.name) 'Response') ~}}